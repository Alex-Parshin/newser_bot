{"version":3,"file":"adblocker.umd.min.js","sources":["../adblocker.ts"],"sourcesContent":["/*!\n * Copyright (c) 2017-2019 Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nexport type Lifecycle = 'start' | 'dom-update';\n\nexport interface IBackgroundCallback {\n  classes: string[];\n  hrefs: string[];\n  ids: string[];\n  lifecycle: Lifecycle;\n}\n\nexport interface IMessageFromBackground {\n  active: boolean;\n  scripts: string[];\n  styles: string;\n  extended: string[];\n}\n\nexport interface DOMElement {\n  href?: string | SVGAnimatedString | null;\n  nodeType?: number;\n  localName?: string;\n  id?: string;\n  classList?: DOMTokenList;\n  querySelectorAll?: ParentNode['querySelectorAll'];\n}\n\nexport function getDOMElementsFromMutations(mutations: MutationRecord[]): DOMElement[] {\n  // Accumulate all nodes which were updated in `nodes`\n  const nodes: DOMElement[] = [];\n  for (let i = 0; i < mutations.length; i += 1) {\n    const mutation = mutations[i];\n    if (mutation.type === 'attributes') {\n      nodes.push(mutation.target);\n    } else if (mutation.type === 'childList') {\n      const addedNodes = mutation.addedNodes;\n      for (let j = 0; j < addedNodes.length; j += 1) {\n        const addedNode: DOMElement = addedNodes[j];\n        nodes.push(addedNode);\n\n        if (addedNode.querySelectorAll !== undefined) {\n          const children = addedNode.querySelectorAll('[id],[class],[href]');\n          for (let k = 0; k < children.length; k += 1) {\n            nodes.push(children[k]);\n          }\n        }\n      }\n    }\n  }\n  return nodes;\n}\n\n/**\n * WARNING: this function should be self-contained and not rely on any global\n * symbol. That constraint needs to be fulfilled because this function can\n * potentially be injected in content-script (e.g.: see PuppeteerBlocker for\n * more details).\n */\nexport function extractFeaturesFromDOM(\n  elements: DOMElement[],\n): {\n  classes: string[];\n  hrefs: string[];\n  ids: string[];\n} {\n  const ignoredTags = new Set(['br', 'head', 'link', 'meta', 'script', 'style']);\n  const classes: Set<string> = new Set();\n  const hrefs: Set<string> = new Set();\n  const ids: Set<string> = new Set();\n\n  for (let i = 0; i < elements.length; i += 1) {\n    const element = elements[i];\n\n    if (element.nodeType !== 1 /* Node.ELEMENT_NODE */) {\n      continue;\n    }\n\n    if (element.localName !== undefined && ignoredTags.has(element.localName)) {\n      continue;\n    }\n\n    // Update ids\n    const id = element.id;\n    if (id) {\n      ids.add(id);\n    }\n\n    // Update classes\n    const classList = element.classList;\n    if (classList) {\n      for (let j = 0; j < classList.length; j += 1) {\n        classes.add(classList[j]);\n      }\n    }\n\n    // Update href\n    const href = element.href;\n    if (typeof href === 'string') {\n      hrefs.add(href);\n    }\n  }\n\n  return {\n    classes: Array.from(classes),\n    hrefs: Array.from(hrefs),\n    ids: Array.from(ids),\n  };\n}\n\nexport class DOMMonitor {\n  private knownIds: Set<string> = new Set();\n  private knownHrefs: Set<string> = new Set();\n  private knownClasses: Set<string> = new Set();\n\n  private observer: MutationObserver | null = null;\n\n  constructor(\n    private readonly cb: (features: { ids: string[]; classes: string[]; hrefs: string[] }) => void,\n  ) {}\n\n  public queryAll(window: Pick<Window, 'document'>): void {\n    this.handleNewNodes(Array.from(window.document.querySelectorAll('[id],[class],[href]')));\n  }\n  public start(window: Pick<Window, 'document'> & { MutationObserver?: typeof MutationObserver }): void {\n    if (this.observer === null && window.MutationObserver !== undefined) {\n      this.observer = new window.MutationObserver((mutations: MutationRecord[]) => {\n        this.handleNewNodes(getDOMElementsFromMutations(mutations));\n      });\n\n      this.observer.observe(window.document.documentElement, {\n        attributeFilter: ['class', 'id', 'href'],\n        attributes: true,\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  public stop(): void {\n    if (this.observer !== null) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  }\n\n  public handleNewFeatures({\n    hrefs,\n    ids,\n    classes,\n  }: {\n    hrefs: string[];\n    ids: string[];\n    classes: string[];\n  }): boolean {\n    const newIds: string[] = [];\n    const newClasses: string[] = [];\n    const newHrefs: string[] = [];\n\n    // Update ids\n    for (let i = 0; i < ids.length; i += 1) {\n      const id = ids[i];\n      if (this.knownIds.has(id) === false) {\n        newIds.push(id);\n        this.knownIds.add(id);\n      }\n    }\n\n    for (let i = 0; i < classes.length; i += 1) {\n      const cls = classes[i];\n      if (this.knownClasses.has(cls) === false) {\n        newClasses.push(cls);\n        this.knownClasses.add(cls);\n      }\n    }\n\n    for (let i = 0; i < hrefs.length; i += 1) {\n      const href = hrefs[i];\n      if (this.knownHrefs.has(href) === false) {\n        newHrefs.push(href);\n        this.knownHrefs.add(href);\n      }\n    }\n\n    if (newIds.length !== 0 || newClasses.length !== 0 || newHrefs.length !== 0) {\n      this.cb({\n        classes: newClasses,\n        hrefs: newHrefs,\n        ids: newIds,\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  private handleNewNodes(nodes: DOMElement[]): boolean {\n    return this.handleNewFeatures(extractFeaturesFromDOM(nodes));\n  }\n}\n\n/**\n * Wrap a self-executing script into a block of custom logic to remove the\n * script tag once execution is terminated. This can be useful to not leave\n * traces in the DOM after injections.\n */\nexport function autoRemoveScript(script: string): string {\n  // Minified using 'terser'\n  return `try{${script}}catch(c){}!function(){var c=document.currentScript,e=c&&c.parentNode;e&&e.removeChild(c)}();`;\n  // Original:\n  //\n  //    try {\n  //      ${script}\n  //    } catch (ex) { }\n  //\n  //    (function() {\n  //      var currentScript = document.currentScript;\n  //      var parent = currentScript && currentScript.parentNode;\n  //\n  //      if (parent) {\n  //        parent.removeChild(currentScript);\n  //      }\n  //    })();\n}\n\nexport function injectCSSRule(rule: string, doc: Document): void {\n  const parent = doc.head || doc.getElementsByTagName('head')[0] || doc.documentElement;\n  if (parent !== null) {\n    const css = doc.createElement('style');\n    css.type = 'text/css';\n    css.id = 'cliqz-adblokcer-css-rules';\n    css.appendChild(doc.createTextNode(rule));\n    parent.appendChild(css);\n  }\n}\n\nexport function injectScript(s: string, doc: Document): void {\n  const script = doc.createElement('script');\n  script.type = 'text/javascript';\n  script.id = 'cliqz-adblocker-script';\n  script.async = false;\n  script.appendChild(doc.createTextNode(autoRemoveScript(s)));\n\n  // Insert node\n  const parent = doc.head || doc.documentElement;\n  if (parent !== null) {\n    parent.appendChild(script);\n  }\n}\n"],"names":["getDOMElementsFromMutations","mutations","i","length","mutation","type","nodes","push","target","j","addedNodes","addedNode","undefined","querySelectorAll","k","children","extractFeaturesFromDOM","elements","element","nodeType","localName","ignoredTags","has","id","ids","add","classList","classes","href","hrefs","Array","from","autoRemoveScript","script","DOMMonitor","cb","knownIds","Set","knownHrefs","knownClasses","observer","window","handleNewNodes","document","MutationObserver","observe","documentElement","attributeFilter","attributes","childList","subtree","disconnect","newIds","cls","newClasses","newHrefs","handleNewFeatures","rule","doc","parent","css","appendChild","createTextNode","s","async"],"mappings":"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"}